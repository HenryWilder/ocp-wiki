---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import Document from '../../layouts/Document.astro';
const allObjectPages: CollectionEntry<'objects'>[] = await getCollection('objects');
// Only show the latest version of each object
// Exclude hidden objects
// Consider replacing the "newest version" logic with the visibility, so that newer versions can be hidden
const latestObjectPages: CollectionEntry<'objects'>[] = allObjectPages.filter((item, index, self) => self.findIndex(e => e.data.name === item.data.name) === index && item.data.visibility != 'hidden');
---
<Document title="Anomaly List" desc="Obscure, Classify, Preserve">
	<main>
		<article>
            <div id="hrgroup">
                <h1>Object List</h1>
            </div>
            <ul class="card-list">
				{latestObjectPages.map((item) => <li><a href={`/objects/${item.slug}/`}>{item.data.name}</a><Fragment set:html={'&nbsp;'.repeat(4 - item.data.name.length)}/>- {item.data.title} ({item.data.category})</li>)}
			</ul>
		</article>
	</main>
</Document>
