---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import Document from '../../layouts/Document.astro';
import Breadcrumbs from '../../components/Breadcrumbs.astro';
import BannerRecolor from '../../components/BannerRecolor.astro';

const allReports: CollectionEntry<'reports'>[] = await getCollection('reports');

// Takes a collection and a function that returns a unique value for each entry in the collection
const unique = (src: CollectionEntry<'reports'>[], get: (e: CollectionEntry<'reports'>) => string) =>
    src.filter((value, index, self) => self.findIndex(e => get(e) === get(value)) === index);

const types: string[] = unique(allReports, (e) => e.data.type).map((e) => e.data.type);
const getEntryObject = (e: CollectionEntry<'reports'>) => Array.isArray(e.data.object) ? e.data.object.join(', ') : e.data.object;
const objects: string[][] = types.map(t =>
    unique(allReports.filter(e => e.data.type == t && e.data.object != undefined), getEntryObject)
    .map(getEntryObject));

const entryGroups: CollectionEntry<'reports'>[][][] = types.map((t, i) => objects[i].map((o) => allReports.filter(e => e.data.type == t && e.data.object == o)));
// Add entries that don't have an object
types.forEach(
    (t, i) => entryGroups[i].push(allReports.filter(e => e.data.type == t && e.data.object === undefined))
);
---
<Document title="Report File List" desc={`Index for report docs (${types.map(t => t.toLowerCase()+'s').join(', ')})`} thumb="/thumbnail-info.png">
    <BannerRecolor containmentClass="Info"/>
	<article>
		<Breadcrumbs/>
		<div id="hrgroup">
			<h1>Report File List</h1>
		</div>
        {entryGroups.map((category, i) =>
            <h2>{types[i]+'s'}</h2>
            <ul class="card-list">
            {category.map((group, j) =>
                <section style="margin-block: 0.25em">
                    {objects[i][j] != undefined && <a href={`/objects/${objects[i][j]}/`}><b>OCP-{objects[i][j]}</b></a>}
                    <>{group.map((entry) =>
                        <li>
                            <a href={`/reports/${entry.slug}/`} target="_blank">{entry.data.type.match(/[A-Z]/g).join('')} {entry.data.object} {entry.data.instance}</a>
                            {entry.data.label && <>&quot;{entry.data.label}&quot;</>}
                        </li>
                    )}</>
                </section>
            )}</ul><br/>
        )}
	</article>
</Document>
